class Solution {
public:
    vector<vector<int>> updateMatrix(vector<vector<int>>& mat) {
        int n = mat.size();
        int m = mat[0].size();
        queue<pair<int,int>> Q;
        for(int i=0; i<n; i++)
        {
            for(int j=0; j<m; j++)
            {
                if(mat[i][j]==0) Q.push({i,j});
                else mat[i][j]=-1;
            }
        }
         // pushing those value in Queue which can be taken as refrence for calculating the distance;
        pair<int, int> dirs[4] = {{0, 1}, {0, -1}, {1, 0}, {-1, 0}};
        
        while(!Q.empty())
        {
            auto[row, col] = Q.front();
            Q.pop();
            for(auto dir: dirs)
            {
                int newR = row + dir.first;
                int newC = col + dir.second;
                if(newR<0 || newR>=n || newC<0 || newC>=m || mat[newR][newC] != -1) continue;
                else
                {
                    mat[newR][newC]=mat[row][col]+1;
                    Q.push({newR,newC});
                }
            }
        }
        return mat;
    }
};
